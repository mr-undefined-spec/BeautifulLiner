
import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '../../model/primitive'))
from point import Point
from cubic_bezier_curve_control_point import CubicBezierCurveControlPoint
from linear_approximate_curve_control_point import LinearApproximateCurveControlPoint

sys.path.append(os.path.join(os.path.dirname(__file__), '../../model/curve'))
from linear_approximate_curve import LinearApproximateCurve

sys.path.append(os.path.join(os.path.dirname(__file__), '../../model/layer'))
from layer import Layer
from layer_set import LayerSet

sys.path.append(os.path.join(os.path.dirname(__file__), '../../handler'))
from broaden_handler import BroadenHandler

sys.path.append(os.path.join(os.path.dirname(__file__), '../helper'))
import model_mocks
import handler_mocks
from handler_mocks import ArcDirection

import unittest

import numpy as np
import math

class TestBroadenHandler(unittest.TestCase):
    def setUp(self):

        self.curve_1 = handler_mocks.create_mock_linear_approximate_curve_of_arc(100.0,  100.0,   0.0,  90.0, 180.0, 100, ArcDirection.COUNTER_CLOCKWISE)
        self.curve_2 = handler_mocks.create_mock_linear_approximate_curve_of_arc(100.0,  100.0, 200.0, 270.0, 360.0, 100, ArcDirection.CLOCKWISE)
        self.curve_3 = handler_mocks.create_mock_linear_approximate_curve_of_arc(100.0,  300.0, 200.0,  90.0, 180.0, 100, ArcDirection.COUNTER_CLOCKWISE)

    #end

    def test_broaden_single(self):

        broad_curve = BroadenHandler.process(self.curve_1, 1.0, "first_last")
        template = r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round"'
        s = ""
        s += template
        s += r' d="'
        s += broad_curve.to_str()
        s += r'" />'

        the_answer = r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 0.000 0.000 L -0.008 1.571 L 0.009 3.142 L 0.051 4.713 L 0.117 6.283 L 0.209 7.853 L 0.324 9.421 L 0.465 10.988 L 0.630 12.552 L 0.819 14.114 L 1.033 15.673 L 1.272 17.229 L 1.535 18.781 L 1.823 20.329 L 2.135 21.873 L 2.471 23.412 L 2.831 24.946 L 3.216 26.474 L 3.624 27.997 L 4.057 29.513 L 4.513 31.022 L 4.993 32.525 L 5.497 34.020 L 6.024 35.507 L 6.575 36.986 L 7.149 38.456 L 7.746 39.918 L 8.366 41.370 L 9.009 42.812 L 9.674 44.245 L 10.363 45.667 L 11.073 47.079 L 11.806 48.479 L 12.561 49.868 L 13.338 51.246 L 14.136 52.611 L 14.956 53.964 L 15.798 55.304 L 16.660 56.631 L 17.543 57.944 L 18.447 59.244 L 19.372 60.529 L 20.317 61.800 L 21.282 63.057 L 22.266 64.298 L 23.270 65.524 L 24.294 66.734 L 25.337 67.928 L 26.398 69.106 L 27.478 70.268 L 28.577 71.412 L 29.721 72.511 L 30.883 73.591 L 32.061 74.653 L 33.255 75.696 L 34.465 76.720 L 35.691 77.725 L 36.933 78.710 L 38.189 79.675 L 39.460 80.620 L 40.746 81.545 L 42.046 82.450 L 43.360 83.333 L 44.687 84.196 L 46.027 85.038 L 47.380 85.858 L 48.745 86.657 L 50.123 87.434 L 51.512 88.189 L 52.913 88.922 L 54.324 89.633 L 55.747 90.322 L 57.180 90.988 L 58.622 91.631 L 60.075 92.251 L 61.537 92.848 L 63.007 93.423 L 64.487 93.973 L 65.974 94.501 L 67.469 95.005 L 68.972 95.485 L 70.481 95.942 L 71.998 96.374 L 73.520 96.783 L 75.049 97.168 L 76.583 97.528 L 78.122 97.864 L 79.667 98.176 L 81.215 98.464 L 82.768 98.727 L 84.324 98.966 L 85.883 99.180 L 87.445 99.370 L 89.010 99.535 L 90.577 99.676 L 92.145 99.791 L 93.715 99.882 L 95.286 99.949 L 96.857 99.991 L 98.429 100.008 L 100.000 100.000 L 100.000 100.000 L 98.429 99.968 L 96.860 99.911 L 95.292 99.829 L 93.725 99.723 L 92.161 99.592 L 90.600 99.437 L 89.041 99.257 L 87.485 99.053 L 85.934 98.824 L 84.386 98.571 L 82.843 98.294 L 81.305 97.993 L 79.772 97.667 L 78.245 97.318 L 76.723 96.945 L 75.208 96.548 L 73.700 96.127 L 72.199 95.683 L 70.705 95.215 L 69.219 94.724 L 67.741 94.210 L 66.272 93.673 L 64.812 93.113 L 63.361 92.530 L 61.919 91.925 L 60.488 91.297 L 59.067 90.646 L 57.657 89.974 L 56.257 89.280 L 54.869 88.564 L 53.493 87.826 L 52.129 87.067 L 50.777 86.287 L 49.437 85.486 L 48.111 84.664 L 46.798 83.822 L 45.499 82.959 L 44.214 82.076 L 42.943 81.173 L 41.687 80.251 L 40.445 79.309 L 39.219 78.348 L 38.008 77.368 L 36.813 76.369 L 35.634 75.352 L 34.472 74.316 L 33.326 73.263 L 32.197 72.192 L 31.085 71.104 L 29.991 69.998 L 28.886 68.904 L 27.798 67.792 L 26.727 66.663 L 25.674 65.517 L 24.639 64.355 L 23.622 63.176 L 22.624 61.981 L 21.644 60.771 L 20.683 59.545 L 19.742 58.303 L 18.820 57.047 L 17.917 55.776 L 17.035 54.491 L 16.172 53.192 L 15.330 51.879 L 14.508 50.553 L 13.708 49.214 L 12.928 47.863 L 12.169 46.499 L 11.432 45.122 L 10.716 43.735 L 10.022 42.336 L 9.350 40.925 L 8.700 39.505 L 8.072 38.073 L 7.467 36.632 L 6.885 35.182 L 6.325 33.722 L 5.788 32.253 L 5.274 30.775 L 4.783 29.289 L 4.316 27.796 L 3.871 26.295 L 3.451 24.787 L 3.054 23.272 L 2.681 21.751 L 2.332 20.224 L 2.007 18.691 L 1.705 17.153 L 1.428 15.611 L 1.176 14.063 L 0.947 12.512 L 0.743 10.957 L 0.563 9.399 L 0.408 7.837 L 0.277 6.273 L 0.171 4.707 L 0.089 3.140 L 0.032 1.570 L 0.000 0.000 " />'
        self.assertEqual(s, the_answer)
        #print(s)
    #end

    def test_broaden_double(self):

        broad_curve_1 = BroadenHandler.process(self.curve_1, 1.0, "first")
        broad_curve_2 = BroadenHandler.process(self.curve_2, 1.0, "last")
        
        template = r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round"'
        
        s = ""
        s += template
        s += r' d="'
        s += broad_curve_1.to_str()
        s += r'" />' + "\n"

        s += template
        s += r' d="'
        s += broad_curve_2.to_str()
        s += r'" />' + "\n"

        the_answer =  r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 0.000 0.000 L -0.008 1.571 L 0.009 3.142 L 0.051 4.713 L 0.117 6.283 L 0.209 7.853 L 0.324 9.421 L 0.465 10.988 L 0.630 12.552 L 0.819 14.114 L 1.033 15.673 L 1.272 17.229 L 1.535 18.781 L 1.823 20.329 L 2.135 21.873 L 2.471 23.412 L 2.831 24.946 L 3.216 26.474 L 3.624 27.997 L 4.057 29.513 L 4.513 31.022 L 4.993 32.525 L 5.497 34.020 L 6.024 35.507 L 6.575 36.986 L 7.149 38.456 L 7.746 39.918 L 8.366 41.370 L 9.009 42.812 L 9.674 44.245 L 10.363 45.667 L 11.073 47.079 L 11.806 48.479 L 12.561 49.868 L 13.338 51.246 L 14.136 52.611 L 14.956 53.964 L 15.798 55.304 L 16.660 56.631 L 17.543 57.944 L 18.447 59.244 L 19.372 60.529 L 20.317 61.800 L 21.282 63.057 L 22.266 64.298 L 23.270 65.524 L 24.294 66.734 L 25.337 67.928 L 26.398 69.106 L 27.478 70.268 L 28.577 71.412 L 29.707 72.525 L 30.855 73.620 L 32.020 74.697 L 33.202 75.756 L 34.400 76.796 L 35.614 77.817 L 36.844 78.819 L 38.090 79.801 L 39.351 80.763 L 40.627 81.706 L 41.918 82.629 L 43.223 83.531 L 44.542 84.412 L 45.875 85.273 L 47.221 86.113 L 48.580 86.931 L 49.952 87.728 L 51.336 88.503 L 52.732 89.257 L 54.140 89.988 L 55.559 90.697 L 56.989 91.384 L 58.430 92.048 L 59.881 92.690 L 61.342 93.309 L 62.812 93.905 L 64.292 94.477 L 65.780 95.026 L 67.277 95.552 L 68.782 96.054 L 70.294 96.533 L 71.814 96.987 L 73.341 97.418 L 74.875 97.825 L 76.414 98.207 L 77.960 98.566 L 79.511 98.900 L 81.067 99.210 L 82.627 99.495 L 84.192 99.755 L 85.761 99.991 L 87.334 100.203 L 88.909 100.389 L 90.487 100.551 L 92.068 100.688 L 93.650 100.800 L 95.234 100.887 L 96.820 100.950 L 98.406 100.987 L 100.000 100.000 L 100.000 100.000 L 98.437 98.988 L 96.882 98.951 L 95.329 98.890 L 93.776 98.804 L 92.225 98.694 L 90.675 98.560 L 89.128 98.401 L 87.584 98.218 L 86.043 98.011 L 84.505 97.780 L 82.971 97.525 L 81.442 97.245 L 79.916 96.941 L 78.396 96.614 L 76.881 96.263 L 75.372 95.888 L 73.869 95.489 L 72.372 95.067 L 70.882 94.621 L 69.400 94.152 L 67.925 93.660 L 66.458 93.145 L 64.999 92.606 L 63.548 92.045 L 62.107 91.461 L 60.675 90.855 L 59.253 90.226 L 57.841 89.575 L 56.439 88.901 L 55.048 88.206 L 53.668 87.489 L 52.299 86.751 L 50.943 85.991 L 49.598 85.209 L 48.266 84.407 L 46.946 83.584 L 45.640 82.741 L 44.347 81.877 L 43.068 80.992 L 41.803 80.088 L 40.552 79.164 L 39.316 78.221 L 38.095 77.258 L 36.889 76.276 L 35.699 75.275 L 34.524 74.256 L 33.366 73.218 L 32.224 72.163 L 31.099 71.089 L 29.991 69.998 L 28.886 68.904 L 27.798 67.792 L 26.727 66.663 L 25.674 65.517 L 24.639 64.355 L 23.622 63.176 L 22.624 61.981 L 21.644 60.771 L 20.683 59.545 L 19.742 58.303 L 18.820 57.047 L 17.917 55.776 L 17.035 54.491 L 16.172 53.192 L 15.330 51.879 L 14.508 50.553 L 13.708 49.214 L 12.928 47.863 L 12.169 46.499 L 11.432 45.122 L 10.716 43.735 L 10.022 42.336 L 9.350 40.925 L 8.700 39.505 L 8.072 38.073 L 7.467 36.632 L 6.885 35.182 L 6.325 33.722 L 5.788 32.253 L 5.274 30.775 L 4.783 29.289 L 4.316 27.796 L 3.871 26.295 L 3.451 24.787 L 3.054 23.272 L 2.681 21.751 L 2.332 20.224 L 2.007 18.691 L 1.705 17.153 L 1.428 15.611 L 1.176 14.063 L 0.947 12.512 L 0.743 10.957 L 0.563 9.399 L 0.408 7.837 L 0.277 6.273 L 0.171 4.707 L 0.089 3.140 L 0.032 1.570 L 0.000 0.000 " />' + "\n"
        the_answer +=  r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 100.000 100.000 L 101.563 101.012 L 103.118 101.049 L 104.671 101.110 L 106.224 101.196 L 107.775 101.306 L 109.325 101.440 L 110.872 101.599 L 112.416 101.782 L 113.957 101.989 L 115.495 102.220 L 117.029 102.475 L 118.558 102.755 L 120.084 103.059 L 121.604 103.386 L 123.119 103.737 L 124.628 104.112 L 126.131 104.511 L 127.628 104.933 L 129.118 105.379 L 130.600 105.848 L 132.075 106.340 L 133.542 106.855 L 135.001 107.394 L 136.452 107.955 L 137.893 108.539 L 139.325 109.145 L 140.747 109.774 L 142.159 110.425 L 143.561 111.099 L 144.952 111.794 L 146.332 112.511 L 147.701 113.249 L 149.057 114.009 L 150.402 114.791 L 151.734 115.593 L 153.054 116.416 L 154.360 117.259 L 155.653 118.123 L 156.932 119.008 L 158.197 119.912 L 159.448 120.836 L 160.684 121.779 L 161.905 122.742 L 163.111 123.724 L 164.301 124.725 L 165.476 125.744 L 166.634 126.782 L 167.776 127.837 L 168.901 128.911 L 170.009 130.002 L 171.114 131.096 L 172.202 132.208 L 173.273 133.337 L 174.326 134.483 L 175.361 135.645 L 176.378 136.824 L 177.376 138.019 L 178.356 139.229 L 179.317 140.455 L 180.258 141.697 L 181.180 142.953 L 182.083 144.224 L 182.965 145.509 L 183.828 146.808 L 184.670 148.121 L 185.492 149.447 L 186.292 150.786 L 187.072 152.137 L 187.831 153.501 L 188.568 154.878 L 189.284 156.265 L 189.978 157.664 L 190.650 159.075 L 191.300 160.495 L 191.928 161.927 L 192.533 163.368 L 193.115 164.818 L 193.675 166.278 L 194.212 167.747 L 194.726 169.225 L 195.217 170.711 L 195.684 172.204 L 196.129 173.705 L 196.549 175.213 L 196.946 176.728 L 197.319 178.249 L 197.668 179.776 L 197.993 181.309 L 198.295 182.847 L 198.572 184.389 L 198.824 185.937 L 199.053 187.488 L 199.257 189.043 L 199.437 190.601 L 199.592 192.163 L 199.723 193.727 L 199.829 195.293 L 199.911 196.860 L 199.968 198.430 L 200.000 200.000 L 200.000 200.000 L 200.008 198.429 L 199.991 196.858 L 199.949 195.287 L 199.883 193.717 L 199.791 192.147 L 199.676 190.579 L 199.535 189.012 L 199.370 187.448 L 199.181 185.886 L 198.967 184.327 L 198.728 182.771 L 198.465 181.219 L 198.177 179.671 L 197.865 178.127 L 197.529 176.588 L 197.169 175.054 L 196.784 173.526 L 196.376 172.003 L 195.943 170.487 L 195.487 168.978 L 195.007 167.475 L 194.503 165.980 L 193.976 164.493 L 193.425 163.014 L 192.851 161.544 L 192.254 160.082 L 191.634 158.630 L 190.991 157.188 L 190.326 155.755 L 189.637 154.333 L 188.927 152.921 L 188.194 151.521 L 187.439 150.132 L 186.662 148.754 L 185.864 147.389 L 185.044 146.036 L 184.202 144.696 L 183.340 143.369 L 182.457 142.056 L 181.553 140.756 L 180.628 139.471 L 179.683 138.200 L 178.718 136.943 L 177.734 135.702 L 176.730 134.476 L 175.706 133.266 L 174.663 132.072 L 173.602 130.894 L 172.522 129.732 L 171.423 128.588 L 170.293 127.475 L 169.145 126.380 L 167.980 125.303 L 166.798 124.244 L 165.600 123.204 L 164.386 122.183 L 163.156 121.181 L 161.910 120.199 L 160.649 119.237 L 159.373 118.294 L 158.082 117.371 L 156.777 116.469 L 155.458 115.588 L 154.125 114.727 L 152.779 113.887 L 151.420 113.069 L 150.048 112.272 L 148.664 111.497 L 147.268 110.743 L 145.860 110.012 L 144.441 109.303 L 143.011 108.616 L 141.570 107.952 L 140.119 107.310 L 138.658 106.691 L 137.188 106.095 L 135.708 105.523 L 134.220 104.974 L 132.723 104.448 L 131.218 103.946 L 129.706 103.467 L 128.186 103.013 L 126.659 102.582 L 125.125 102.175 L 123.586 101.793 L 122.040 101.434 L 120.489 101.100 L 118.933 100.790 L 117.373 100.505 L 115.808 100.245 L 114.239 100.009 L 112.666 99.797 L 111.091 99.611 L 109.513 99.449 L 107.932 99.312 L 106.350 99.200 L 104.766 99.113 L 103.180 99.050 L 101.594 99.013 L 100.000 100.000 " />' + "\n"

        self.assertEqual(s, the_answer)
        #print(s)
    #end

    def test_broaden_triple(self):

        broad_curve_1 = BroadenHandler.process(self.curve_1, 1.0, "first")
        broad_curve_2 = BroadenHandler.process(self.curve_2, 1.0, "middle")
        broad_curve_3 = BroadenHandler.process(self.curve_3, 1.0, "last")
        
        template = r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round"'
        
        s = ""
        s += template
        s += r' d="'
        s += broad_curve_1.to_str()
        s += r'" />' + "\n"

        s += template
        s += r' d="'
        s += broad_curve_2.to_str()
        s += r'" />' + "\n"

        s += template
        s += r' d="'
        s += broad_curve_3.to_str()
        s += r'" />' + "\n"

        the_answer =  r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 0.000 0.000 L -0.008 1.571 L 0.009 3.142 L 0.051 4.713 L 0.117 6.283 L 0.209 7.853 L 0.324 9.421 L 0.465 10.988 L 0.630 12.552 L 0.819 14.114 L 1.033 15.673 L 1.272 17.229 L 1.535 18.781 L 1.823 20.329 L 2.135 21.873 L 2.471 23.412 L 2.831 24.946 L 3.216 26.474 L 3.624 27.997 L 4.057 29.513 L 4.513 31.022 L 4.993 32.525 L 5.497 34.020 L 6.024 35.507 L 6.575 36.986 L 7.149 38.456 L 7.746 39.918 L 8.366 41.370 L 9.009 42.812 L 9.674 44.245 L 10.363 45.667 L 11.073 47.079 L 11.806 48.479 L 12.561 49.868 L 13.338 51.246 L 14.136 52.611 L 14.956 53.964 L 15.798 55.304 L 16.660 56.631 L 17.543 57.944 L 18.447 59.244 L 19.372 60.529 L 20.317 61.800 L 21.282 63.057 L 22.266 64.298 L 23.270 65.524 L 24.294 66.734 L 25.337 67.928 L 26.398 69.106 L 27.478 70.268 L 28.577 71.412 L 29.707 72.525 L 30.855 73.620 L 32.020 74.697 L 33.202 75.756 L 34.400 76.796 L 35.614 77.817 L 36.844 78.819 L 38.090 79.801 L 39.351 80.763 L 40.627 81.706 L 41.918 82.629 L 43.223 83.531 L 44.542 84.412 L 45.875 85.273 L 47.221 86.113 L 48.580 86.931 L 49.952 87.728 L 51.336 88.503 L 52.732 89.257 L 54.140 89.988 L 55.559 90.697 L 56.989 91.384 L 58.430 92.048 L 59.881 92.690 L 61.342 93.309 L 62.812 93.905 L 64.292 94.477 L 65.780 95.026 L 67.277 95.552 L 68.782 96.054 L 70.294 96.533 L 71.814 96.987 L 73.341 97.418 L 74.875 97.825 L 76.414 98.207 L 77.960 98.566 L 79.511 98.900 L 81.067 99.210 L 82.627 99.495 L 84.192 99.755 L 85.761 99.991 L 87.334 100.203 L 88.909 100.389 L 90.487 100.551 L 92.068 100.688 L 93.650 100.800 L 95.234 100.887 L 96.820 100.950 L 98.406 100.987 L 100.000 100.000 L 100.000 100.000 L 98.437 98.988 L 96.882 98.951 L 95.329 98.890 L 93.776 98.804 L 92.225 98.694 L 90.675 98.560 L 89.128 98.401 L 87.584 98.218 L 86.043 98.011 L 84.505 97.780 L 82.971 97.525 L 81.442 97.245 L 79.916 96.941 L 78.396 96.614 L 76.881 96.263 L 75.372 95.888 L 73.869 95.489 L 72.372 95.067 L 70.882 94.621 L 69.400 94.152 L 67.925 93.660 L 66.458 93.145 L 64.999 92.606 L 63.548 92.045 L 62.107 91.461 L 60.675 90.855 L 59.253 90.226 L 57.841 89.575 L 56.439 88.901 L 55.048 88.206 L 53.668 87.489 L 52.299 86.751 L 50.943 85.991 L 49.598 85.209 L 48.266 84.407 L 46.946 83.584 L 45.640 82.741 L 44.347 81.877 L 43.068 80.992 L 41.803 80.088 L 40.552 79.164 L 39.316 78.221 L 38.095 77.258 L 36.889 76.276 L 35.699 75.275 L 34.524 74.256 L 33.366 73.218 L 32.224 72.163 L 31.099 71.089 L 29.991 69.998 L 28.886 68.904 L 27.798 67.792 L 26.727 66.663 L 25.674 65.517 L 24.639 64.355 L 23.622 63.176 L 22.624 61.981 L 21.644 60.771 L 20.683 59.545 L 19.742 58.303 L 18.820 57.047 L 17.917 55.776 L 17.035 54.491 L 16.172 53.192 L 15.330 51.879 L 14.508 50.553 L 13.708 49.214 L 12.928 47.863 L 12.169 46.499 L 11.432 45.122 L 10.716 43.735 L 10.022 42.336 L 9.350 40.925 L 8.700 39.505 L 8.072 38.073 L 7.467 36.632 L 6.885 35.182 L 6.325 33.722 L 5.788 32.253 L 5.274 30.775 L 4.783 29.289 L 4.316 27.796 L 3.871 26.295 L 3.451 24.787 L 3.054 23.272 L 2.681 21.751 L 2.332 20.224 L 2.007 18.691 L 1.705 17.153 L 1.428 15.611 L 1.176 14.063 L 0.947 12.512 L 0.743 10.957 L 0.563 9.399 L 0.408 7.837 L 0.277 6.273 L 0.171 4.707 L 0.089 3.140 L 0.032 1.570 L 0.000 0.000 " />'  + "\n"
        the_answer +=  r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 100.000 100.000 L 101.563 101.012 L 103.118 101.049 L 104.671 101.110 L 106.224 101.196 L 107.775 101.306 L 109.325 101.440 L 110.872 101.599 L 112.416 101.782 L 113.957 101.989 L 115.495 102.220 L 117.029 102.475 L 118.558 102.755 L 120.084 103.059 L 121.604 103.386 L 123.119 103.737 L 124.628 104.112 L 126.131 104.511 L 127.628 104.933 L 129.118 105.379 L 130.600 105.848 L 132.075 106.340 L 133.542 106.855 L 135.001 107.394 L 136.452 107.955 L 137.893 108.539 L 139.325 109.145 L 140.747 109.774 L 142.159 110.425 L 143.561 111.099 L 144.952 111.794 L 146.332 112.511 L 147.701 113.249 L 149.057 114.009 L 150.402 114.791 L 151.734 115.593 L 153.054 116.416 L 154.360 117.259 L 155.653 118.123 L 156.932 119.008 L 158.197 119.912 L 159.448 120.836 L 160.684 121.779 L 161.905 122.742 L 163.111 123.724 L 164.301 124.725 L 165.476 125.744 L 166.634 126.782 L 167.776 127.837 L 168.901 128.911 L 170.009 130.002 L 171.100 131.110 L 172.173 132.236 L 173.229 133.378 L 174.266 134.536 L 175.285 135.711 L 176.286 136.901 L 177.268 138.107 L 178.230 139.328 L 179.174 140.565 L 180.097 141.816 L 181.001 143.081 L 181.885 144.360 L 182.749 145.653 L 183.593 146.960 L 184.416 148.279 L 185.217 149.612 L 185.998 150.956 L 186.758 152.313 L 187.496 153.682 L 188.213 155.062 L 188.908 156.453 L 189.581 157.855 L 190.232 159.267 L 190.861 160.690 L 191.467 162.122 L 192.051 163.563 L 192.612 165.013 L 193.150 166.472 L 193.665 167.940 L 194.157 169.415 L 194.626 170.898 L 195.071 172.387 L 195.493 173.884 L 195.892 175.387 L 196.266 176.897 L 196.618 178.411 L 196.945 179.932 L 197.248 181.457 L 197.527 182.987 L 197.782 184.521 L 198.013 186.059 L 198.220 187.600 L 198.403 189.144 L 198.561 190.691 L 198.695 192.240 L 198.805 193.792 L 198.890 195.344 L 198.951 196.898 L 198.988 198.453 L 200.000 200.000 L 200.000 200.000 L 200.988 198.421 L 200.950 196.835 L 200.888 195.250 L 200.801 193.666 L 200.689 192.083 L 200.552 190.503 L 200.391 188.925 L 200.205 187.349 L 199.993 185.777 L 199.758 184.208 L 199.497 182.643 L 199.212 181.082 L 198.903 179.526 L 198.569 177.975 L 198.211 176.430 L 197.829 174.890 L 197.422 173.356 L 196.992 171.829 L 196.537 170.309 L 196.059 168.797 L 195.557 167.292 L 195.032 165.795 L 194.483 164.306 L 193.910 162.827 L 193.315 161.356 L 192.696 159.895 L 192.055 158.444 L 191.391 157.003 L 190.704 155.573 L 189.995 154.154 L 189.264 152.746 L 188.511 151.350 L 187.736 149.966 L 186.939 148.594 L 186.121 147.234 L 185.281 145.888 L 184.421 144.555 L 183.540 143.236 L 182.638 141.931 L 181.715 140.640 L 180.773 139.364 L 179.810 138.103 L 178.828 136.857 L 177.827 135.626 L 176.806 134.412 L 175.766 133.213 L 174.708 132.032 L 173.631 130.866 L 172.536 129.718 L 171.423 128.588 L 170.293 127.475 L 169.145 126.380 L 167.980 125.303 L 166.798 124.244 L 165.600 123.204 L 164.386 122.183 L 163.156 121.181 L 161.910 120.199 L 160.649 119.237 L 159.373 118.294 L 158.082 117.371 L 156.777 116.469 L 155.458 115.588 L 154.125 114.727 L 152.779 113.887 L 151.420 113.069 L 150.048 112.272 L 148.664 111.497 L 147.268 110.743 L 145.860 110.012 L 144.441 109.303 L 143.011 108.616 L 141.570 107.952 L 140.119 107.310 L 138.658 106.691 L 137.188 106.095 L 135.708 105.523 L 134.220 104.974 L 132.723 104.448 L 131.218 103.946 L 129.706 103.467 L 128.186 103.013 L 126.659 102.582 L 125.125 102.175 L 123.586 101.793 L 122.040 101.434 L 120.489 101.100 L 118.933 100.790 L 117.373 100.505 L 115.808 100.245 L 114.239 100.009 L 112.666 99.797 L 111.091 99.611 L 109.513 99.449 L 107.932 99.312 L 106.350 99.200 L 104.766 99.113 L 103.180 99.050 L 101.594 99.013 L 100.000 100.000 " />'  + "\n"
        the_answer +=  r'<path stroke="#00ff00" stroke-width="0.1" fill="none" stroke-linecap="round" opacity="1" stroke-linejoin="round" d="M 200.000 200.000 L 199.012 201.579 L 199.050 203.165 L 199.112 204.750 L 199.199 206.334 L 199.311 207.917 L 199.448 209.497 L 199.609 211.075 L 199.795 212.651 L 200.007 214.223 L 200.242 215.792 L 200.503 217.357 L 200.788 218.918 L 201.097 220.474 L 201.431 222.025 L 201.789 223.570 L 202.171 225.110 L 202.578 226.644 L 203.008 228.171 L 203.463 229.691 L 203.941 231.203 L 204.443 232.708 L 204.968 234.205 L 205.517 235.694 L 206.090 237.173 L 206.685 238.644 L 207.304 240.105 L 207.945 241.556 L 208.609 242.997 L 209.296 244.427 L 210.005 245.846 L 210.736 247.254 L 211.489 248.650 L 212.264 250.034 L 213.061 251.406 L 213.879 252.766 L 214.719 254.112 L 215.579 255.445 L 216.460 256.764 L 217.362 258.069 L 218.285 259.360 L 219.227 260.636 L 220.190 261.897 L 221.172 263.143 L 222.173 264.374 L 223.194 265.588 L 224.234 266.787 L 225.292 267.968 L 226.369 269.134 L 227.464 270.282 L 228.577 271.412 L 229.721 272.511 L 230.883 273.591 L 232.061 274.653 L 233.255 275.696 L 234.465 276.720 L 235.691 277.725 L 236.933 278.710 L 238.189 279.675 L 239.460 280.620 L 240.746 281.545 L 242.046 282.450 L 243.360 283.333 L 244.687 284.196 L 246.027 285.038 L 247.380 285.858 L 248.745 286.657 L 250.123 287.434 L 251.512 288.189 L 252.913 288.922 L 254.324 289.633 L 255.747 290.322 L 257.180 290.988 L 258.622 291.631 L 260.075 292.251 L 261.537 292.848 L 263.007 293.423 L 264.487 293.973 L 265.974 294.501 L 267.469 295.005 L 268.972 295.485 L 270.481 295.942 L 271.998 296.374 L 273.520 296.783 L 275.049 297.168 L 276.583 297.528 L 278.122 297.864 L 279.667 298.176 L 281.215 298.464 L 282.768 298.727 L 284.324 298.966 L 285.883 299.180 L 287.445 299.370 L 289.010 299.535 L 290.577 299.676 L 292.145 299.791 L 293.715 299.882 L 295.286 299.949 L 296.857 299.991 L 298.429 300.008 L 300.000 300.000 L 300.000 300.000 L 298.429 299.968 L 296.860 299.911 L 295.292 299.829 L 293.725 299.723 L 292.161 299.592 L 290.600 299.437 L 289.041 299.257 L 287.485 299.053 L 285.934 298.824 L 284.386 298.571 L 282.843 298.294 L 281.305 297.993 L 279.772 297.667 L 278.245 297.318 L 276.723 296.945 L 275.208 296.548 L 273.700 296.127 L 272.199 295.683 L 270.705 295.215 L 269.219 294.724 L 267.741 294.210 L 266.272 293.673 L 264.812 293.113 L 263.361 292.530 L 261.919 291.925 L 260.488 291.297 L 259.067 290.646 L 257.657 289.974 L 256.257 289.280 L 254.869 288.564 L 253.493 287.826 L 252.129 287.067 L 250.777 286.287 L 249.437 285.486 L 248.111 284.664 L 246.798 283.822 L 245.499 282.959 L 244.214 282.076 L 242.943 281.173 L 241.687 280.251 L 240.445 279.309 L 239.219 278.348 L 238.008 277.368 L 236.813 276.369 L 235.634 275.352 L 234.472 274.316 L 233.326 273.263 L 232.197 272.192 L 231.085 271.104 L 229.991 269.998 L 228.900 268.890 L 227.827 267.764 L 226.771 266.622 L 225.734 265.464 L 224.715 264.289 L 223.714 263.099 L 222.732 261.893 L 221.770 260.672 L 220.826 259.435 L 219.903 258.184 L 218.999 256.919 L 218.115 255.640 L 217.251 254.347 L 216.407 253.040 L 215.584 251.721 L 214.783 250.388 L 214.002 249.044 L 213.242 247.687 L 212.504 246.318 L 211.787 244.938 L 211.092 243.547 L 210.419 242.145 L 209.768 240.733 L 209.139 239.310 L 208.533 237.878 L 207.949 236.437 L 207.388 234.987 L 206.850 233.528 L 206.335 232.060 L 205.843 230.585 L 205.374 229.102 L 204.929 227.613 L 204.507 226.116 L 204.108 224.613 L 203.734 223.103 L 203.382 221.589 L 203.055 220.068 L 202.752 218.543 L 202.473 217.013 L 202.218 215.479 L 201.987 213.941 L 201.780 212.400 L 201.597 210.856 L 201.439 209.309 L 201.305 207.760 L 201.195 206.208 L 201.110 204.656 L 201.049 203.102 L 201.012 201.547 L 200.000 200.000 " />'  + "\n"

        self.assertEqual( s, the_answer)

        #print(s)
    #end

#end

if __name__ == '__main__':
    unittest.main()
#end

